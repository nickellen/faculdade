.code16
.text
.globl _start
 
_start:

    movb $'.' , %al		# inicio do programa
    
    movb $0xe , %ah		# imprime o al do telcado
    int $0x10
    
    movb $' ' , %al		
    
    movb $0xe , %ah		# imprime o al do telcado
    int $0x10
    
    movw $0x2000, %ax		# move 0x2000 em ax
    movw %ax , %ds		# move ax para ds - registrador de segmento de dados

    movw $0x0, %bx		# off-set = 0x100

leitura:

    movb $0x00 , %ah 		# Serviço de teclado 0x0 leitura em al
    int $0x16
    
    cmp $13, %al		# se for um enter para
    je decrementar

    movb %al, (%bx)		# bx vai armazenar um ponteiro que aponta para conteuso de al
    incw %bx			# incrementa bx - offset incrementa uma palavra

    jmp leitura
    
decrementar:
	
	cmp $0x0, %bx		# decrementa bx até que esteja no mesmo valor do off-set original
	je imprime
	
	decw %bx
	
	jmp decrementar
    
imprime:

	movb (%bx), %al		# move o que está armazenado pelo ponteiro em bx para al
	
	cmpb $0x00, (%bx)	# o final da string contem um byte nulo
	je final
	
	movb $0xe , %ah 	# imprime o valor de al
	int $0x10
	
	incw %bx		# proximo off-set
	
	jmp imprime
    
final:
		
	movb $0x00, (%bx)		# bx vai armazenar um ponteiro que aponta para conteuso de al
    	incw %bx		
	hlt
	jmp final

. = _start + 510
.byte 0x55
.byte 0xaa

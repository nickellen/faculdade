.code16
.text
.globl _start

_start:

    leitura:
    	
    	movb $0x0, %ah			# ler um numero
    	int $0x16		
    	
    	#movb $0x0e, %ah		# imprimir numero
    	#int $0x10		
    	
    	sub $0x30, %al			# ascii -> int
    	
    	add %al, %bl			# passar para bx o numero
    	
    	call imprimir
    	ret
  
    	
    imprimir:
    	
    	movb %cl, %al		# numero de cl para al para imprimir de al
    	add $0x30, %al
  
    	movb $0x0e, %ah		# imprimir numero de al
    	int $0x10	
    	
    	call comparar
    	ret
    	
    	
    comparar:
    	
    	cmp %cl, %bl		# se cl = bl, imprimiu todas ate bl
    	je fim	
    	
    	movb $0x0A, %al
    	movb $0x0e, %ah		# imprimir nextline
    	int $0x10
    	movb $0x08, %al
    	movb $0x0e, %ah		# imprimir backspace
    	int $0x10
    	
    	incb %cl		# incrementa 1 em cl
    	
    	call imprimir
    	ret
 	
    fim:
    	hlt
    	jmp fim


. = _start + 510
.byte 0x55
.byte 0xaa

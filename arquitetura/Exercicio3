.code16
.text
.globl _start

_start:

    movb $'.' , %al		# al = .
    
    movb $0xe , %ah		# imprime o al do telcado
    int $0x10
    
    movw $0x2000, %ax		# move 0x01 em ax
    movw %ax , %ds		# move 0x01 para ds - registrador de segmento de dados

    movw $0x0, %bx		# off-set = 0x100

leitura:

    movb $0x00 , %ah 		# Servi√ßo de teclado 0x0 leitura em al
    int $0x16
    
    cmp $13, %al		# se for um enter para
    je final
   
    movb $0xe , %ah 		# Imprimir um byte em al
    int $0x10

    movb %al, (%bx)		# bx vai armazenar um ponteiro que aponta para conteuso de al
    incw %bx			#  incrementa bx - offset incrementa uma palavra

    jmp leitura
    
    
final:
		
	movb $0x00, (%bx)		# bx vai armazenar um ponteiro que aponta para conteuso de al
    	incw %bx		
	hlt
	jmp final

. = _start + 510
.byte 0x55
.byte 0xaa

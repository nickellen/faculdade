Triggers e procedimentos armazenados para controlar acesso aos dados do banco (log / auditoria)

- CRIAR UM BD ROBOTO

- CRIAR USUARIOS

- CRIAR TABELA DE LOG ON 

- CRIAR TABELA DE LOG OFF

- BASE DE DADOS

- TRIGGERS DE LOG ON QUE RECEBE OS DADOS DO USUARIO



---- 
CREATE USER 'username'@'%' IDENTIFIED BY 'Password123#@!';
GRANT ALL PRIVILEGES ON *.* TO 'username'@'%' WITH GRANT OPTION;



CREATE PROCEDURE logoff_trigger()
SQL SECURITY DEFINER
BEGIN

  DECLARE qtd_select INT DEFAULT 0;

  SELECT variable_value
    INTO qtd_select
    FROM SESSION_STATUS
   WHERE variable_name = 'COM_SELECT';

  UPDATE testeS
     SET logout_ts = NOW(), qtd_select = com_select
   WHERE id_conexao = CONNECTION_ID();
END;


processlist - conexao ativa nao aparece como resulto




ESTRATÉGIA 2:

- PROGRAMA PYTHON PARA INSERT, SELECT E DELET, ALTER

- PROGRAMA PYTHON QUE GERA UM RELATÓRIO DE INFORMAÇÕES DE: TEMPO DE ENTRADA DO USUARIO, TEMPO DE SAIDA DO USUARIO, QUANTIDADE DE SELECT, 
                                                           QUANTIDADE DE INSERT, QUANTIDADE DE QUANTIDADE DE DELET, QUANTIDADE DE ALTER